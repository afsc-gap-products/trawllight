"0","```r
vertical_profiles <- function(light.file, cast.file, time.buffer = 20, ...) {
  # Import light files from directory
  light_data <- read.csv(light.file)
  light_data$trans_llight <- convert_light(light_data$llight)
  cast_data <- read.csv(cast.file)

  # Convert cast times to POSIXct format, add time buffer to avoid truncating cast data and reduce surface measurement error
  # Tests with different time buffers (0-30s) indicates no difference in surface-column relationships with or without buffer
  # but an increase in profiles meeting data quality criteria with the time buffer.
  cast_data$downcast_start <- as.POSIXct(strptime(cast_data$downcast_start, format = \"%Y-%m-%d %H:%M:%S\")) - time.buffer
  cast_data$downcast_end <- as.POSIXct(strptime(cast_data$downcast_end, format = \"%Y-%m-%d %H:%M:%S\")) + time.buffer
  cast_data$upcast_start <- as.POSIXct(strptime(cast_data$upcast_start, format = \"%Y-%m-%d %H:%M:%S\")) - time.buffer 
  cast_data$upcast_end <- as.POSIXct(strptime(cast_data$upcast_end, format = \"%Y-%m-%d %H:%M:%S\")) + time.buffer

  # Remove surface data
  light_data <- subset(light_data, cdepth > 0)
  # Convert light data to POSIXct format
  light_data$ctime <- as.POSIXct(strptime(light_data$ctime, format = \"%Y-%m-%d %H:%M:%S\"))

  # Create empty columns for cast direction (updown) and haul number
  light_data$updown <- rep(NA, nrow(light_data))
  light_data$haul <- rep(NA, nrow(light_data))
  haul_count <- nrow(cast_data)
  for(i in 1:haul_count) {
    # Assign upcast or downcast to times
    light_data$updown[light_data$ctime > cast_data$downcast_start[i] & light_data$ctime < cast_data$downcast_end[i]] <- \"Downcast\"
    light_data$updown[light_data$ctime > cast_data$upcast_start[i] & light_data$ctime < cast_data$upcast_end[i]] <- \"Upcast\"
    light_data$haul[light_data$ctime > cast_data$downcast_start[i] & light_data$ctime < cast_data$upcast_end[i]] <- cast_data$haul[i]
  }
  # Remove on-bottom and errant sampling not from casts
  light_data_casts <- subset(light_data, is.na(updown) == F)
  output.data <- list(VESSEL = cast_data$vessel[1], CRUISE = cast_data$cruise[1], PROFILES = light_data_casts)
  return(output.data)
}
```"
